apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  labels:
    app: payment-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: payment-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      containers:
      - name: payment-service
        image: foodflix/payment-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: uri
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret
        - name: JWT_EXPIRE
          value: "30d"
        - name: ORDER_SERVICE_URL
          value: "http://order-service:4000"
        - name: NOTIFICATION_SERVICE_URL
          value: "http://notification-service:5000"
        - name: CLIENT_URL
          value: "http://frontend:3000"
        - name: API_URL
          value: "http://payment-service:3000"
        # Stripe configuration
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: payment-secrets
              key: stripe-secret-key
        - name: STRIPE_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: payment-secrets
              key: stripe-webhook-secret
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /api/payments/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /api/payments/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  labels:
    app: payment-service
    tier: backend
spec:
  selector:
    app: payment-service
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: payment-secrets
type: Opaque
data:
  # These values should be base64 encoded in a real deployment
  # Sample values for demonstration purposes only
  stripe-secret-key: c2tfdGVzdF81MXlvdXJfa2V5X2hlcmU=
  stripe-webhook-secret: d2hzZWNfeW91cl9zdHJpcGVfd2ViaG9va19zZWNyZXQ=
---
# NetworkPolicy to restrict access to the payment service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: payment-service-network-policy
spec:
  podSelector:
    matchLabels:
      app: payment-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    - podSelector:
        matchLabels:
          app: order-service
    ports:
    - protocol: TCP
      port: 3000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: order-service
    - podSelector:
        matchLabels:
          app: notification-service
    - namespaceSelector:
        matchLabels:
          name: default
      podSelector:
        matchLabels:
          app: mongodb
    ports:
    - protocol: TCP